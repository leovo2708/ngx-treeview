[{"__symbolic":"module","version":3,"metadata":{"TreeviewComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"ngx-treeview","template":"\n      <ng-template #defaultItemTemplate let-item=\"item\" let-onCollapseExpand=\"onCollapseExpand\" let-onCheckedChange=\"onCheckedChange\">\n          <div class=\"form-check\">\n              <i *ngIf=\"item.children\" (click)=\"onCollapseExpand()\" aria-hidden=\"true\" class=\"fa\" [class.fa-caret-right]=\"item.collapsed\"\n                  [class.fa-caret-down]=\"!item.collapsed\"></i>\n              <label class=\"form-check-label\">\n                  <input type=\"checkbox\" class=\"form-check-input\"\n                      [(ngModel)]=\"item.checked\" (ngModelChange)=\"onCheckedChange()\" [disabled]=\"item.disabled\" [indeterminate]=\"item.indeterminate\" />\n                  {{item.text}}\n              </label>\n          </div>\n      </ng-template>\n      <ng-template #defaultHeaderTemplate let-config=\"config\" let-item=\"item\" let-onCollapseExpand=\"onCollapseExpand\" let-onCheckedChange=\"onCheckedChange\"\n          let-onFilterTextChange=\"onFilterTextChange\">\n          <div *ngIf=\"config.hasFilter\" class=\"row row-filter\">\n              <div class=\"col-12\">\n                  <input class=\"form-control\" type=\"text\" [placeholder]=\"i18n.getFilterPlaceholder()\" [(ngModel)]=\"filterText\" (ngModelChange)=\"onFilterTextChange($event)\"\n                  />\n              </div>\n          </div>\n          <div *ngIf=\"hasFilterItems\">\n              <div *ngIf=\"config.hasAllCheckBox || config.hasCollapseExpand\" class=\"row\">\n                  <div class=\"col-12\">\n                      <label *ngIf=\"config.hasAllCheckBox\" class=\"form-check-label\">\n                          <input type=\"checkbox\" class=\"form-check-input\"\n                              [(ngModel)]=\"item.checked\" (ngModelChange)=\"onCheckedChange($event)\" [indeterminate]=\"item.indeterminate\" />\n                              {{i18n.getAllCheckboxText()}}\n                      </label>\n                      <label *ngIf=\"config.hasCollapseExpand\" class=\"pull-right form-check-label\" (click)=\"onCollapseExpand()\">\n                          <i [title]=\"i18n.getTooltipCollapseExpandText(item.collapsed)\" aria-hidden=\"true\"\n                              class=\"fa\" [class.fa-expand]=\"item.collapsed\" [class.fa-compress]=\"!item.collapsed\"></i>\n                      </label>\n                  </div>\n              </div>\n              <div *ngIf=\"config.hasDivider\" class=\"dropdown-divider\"></div>\n          </div>\n      </ng-template>\n      <div class=\"treeview-header\">\n          <ng-template [ngTemplateOutlet]=\"headerTemplate || defaultHeaderTemplate\" [ngTemplateOutletContext]=\"headerTemplateContext\">\n          </ng-template>\n      </div>\n      <div [ngSwitch]=\"hasFilterItems\">\n          <div *ngSwitchCase=\"true\" class=\"treeview-container\" [style.max-height.px]=\"maxHeight\">\n              <ngx-treeview-item *ngFor=\"let item of filterItems\" [config]=\"config\" [item]=\"item\" [template]=\"itemTemplate || defaultItemTemplate\"\n                  [itemsContainerClass]=\"itemsContainerClass\" (checkedChange)=\"onItemCheckedChange(item, $event)\">\n              </ngx-treeview-item>\n          </div>\n          <div *ngSwitchCase=\"false\" class=\"treeview-text\">\n              {{i18n.getFilterNoItemsFoundText()}}\n          </div>\n      </div>\n    ","styles":["\n      :host /deep/ .treeview-header .row-filter {\n        margin-bottom: .5rem;\n      }\n\n      :host /deep/ .treeview-container .fa {\n        width: .8rem;\n        cursor: pointer;\n      }\n\n      .treeview-container {\n        overflow-x: hidden;\n        overflow-y: auto;\n        padding-right: 18px;\n      }\n\n      .treeview-text {\n        padding: .3rem 0;\n        white-space: nowrap;\n      }\n    "]}]}],"members":{"headerTemplate":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"itemTemplate":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"items":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"config":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"itemsContainerClass":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"selectedChange":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output"}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"./treeview-i18n","name":"TreeviewI18n"},{"__symbolic":"reference","module":"./treeview-config","name":"TreeviewConfig"},{"__symbolic":"reference","module":"./treeview-event-parser","name":"TreeviewEventParser"}]}],"ngOnChanges":[{"__symbolic":"method"}],"onAllCollapseExpand":[{"__symbolic":"method"}],"onFilterTextChange":[{"__symbolic":"method"}],"onAllCheckedChange":[{"__symbolic":"method"}],"onItemCheckedChange":[{"__symbolic":"method"}],"raiseSelectedChange":[{"__symbolic":"method"}],"createHeaderTemplateContext":[{"__symbolic":"method"}],"generateSelection":[{"__symbolic":"method"}],"updateFilterItems":[{"__symbolic":"method"}],"filterItem":[{"__symbolic":"method"}],"updateCheckedOfAll":[{"__symbolic":"method"}],"updateCollapsedOfAll":[{"__symbolic":"method"}]}}}},{"__symbolic":"module","version":1,"metadata":{"TreeviewComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"ngx-treeview","template":"\n      <ng-template #defaultItemTemplate let-item=\"item\" let-onCollapseExpand=\"onCollapseExpand\" let-onCheckedChange=\"onCheckedChange\">\n          <div class=\"form-check\">\n              <i *ngIf=\"item.children\" (click)=\"onCollapseExpand()\" aria-hidden=\"true\" class=\"fa\" [class.fa-caret-right]=\"item.collapsed\"\n                  [class.fa-caret-down]=\"!item.collapsed\"></i>\n              <label class=\"form-check-label\">\n                  <input type=\"checkbox\" class=\"form-check-input\"\n                      [(ngModel)]=\"item.checked\" (ngModelChange)=\"onCheckedChange()\" [disabled]=\"item.disabled\" [indeterminate]=\"item.indeterminate\" />\n                  {{item.text}}\n              </label>\n          </div>\n      </ng-template>\n      <ng-template #defaultHeaderTemplate let-config=\"config\" let-item=\"item\" let-onCollapseExpand=\"onCollapseExpand\" let-onCheckedChange=\"onCheckedChange\"\n          let-onFilterTextChange=\"onFilterTextChange\">\n          <div *ngIf=\"config.hasFilter\" class=\"row row-filter\">\n              <div class=\"col-12\">\n                  <input class=\"form-control\" type=\"text\" [placeholder]=\"i18n.getFilterPlaceholder()\" [(ngModel)]=\"filterText\" (ngModelChange)=\"onFilterTextChange($event)\"\n                  />\n              </div>\n          </div>\n          <div *ngIf=\"hasFilterItems\">\n              <div *ngIf=\"config.hasAllCheckBox || config.hasCollapseExpand\" class=\"row\">\n                  <div class=\"col-12\">\n                      <label *ngIf=\"config.hasAllCheckBox\" class=\"form-check-label\">\n                          <input type=\"checkbox\" class=\"form-check-input\"\n                              [(ngModel)]=\"item.checked\" (ngModelChange)=\"onCheckedChange($event)\" [indeterminate]=\"item.indeterminate\" />\n                              {{i18n.getAllCheckboxText()}}\n                      </label>\n                      <label *ngIf=\"config.hasCollapseExpand\" class=\"pull-right form-check-label\" (click)=\"onCollapseExpand()\">\n                          <i [title]=\"i18n.getTooltipCollapseExpandText(item.collapsed)\" aria-hidden=\"true\"\n                              class=\"fa\" [class.fa-expand]=\"item.collapsed\" [class.fa-compress]=\"!item.collapsed\"></i>\n                      </label>\n                  </div>\n              </div>\n              <div *ngIf=\"config.hasDivider\" class=\"dropdown-divider\"></div>\n          </div>\n      </ng-template>\n      <div class=\"treeview-header\">\n          <ng-template [ngTemplateOutlet]=\"headerTemplate || defaultHeaderTemplate\" [ngTemplateOutletContext]=\"headerTemplateContext\">\n          </ng-template>\n      </div>\n      <div [ngSwitch]=\"hasFilterItems\">\n          <div *ngSwitchCase=\"true\" class=\"treeview-container\" [style.max-height.px]=\"maxHeight\">\n              <ngx-treeview-item *ngFor=\"let item of filterItems\" [config]=\"config\" [item]=\"item\" [template]=\"itemTemplate || defaultItemTemplate\"\n                  [itemsContainerClass]=\"itemsContainerClass\" (checkedChange)=\"onItemCheckedChange(item, $event)\">\n              </ngx-treeview-item>\n          </div>\n          <div *ngSwitchCase=\"false\" class=\"treeview-text\">\n              {{i18n.getFilterNoItemsFoundText()}}\n          </div>\n      </div>\n    ","styles":["\n      :host /deep/ .treeview-header .row-filter {\n        margin-bottom: .5rem;\n      }\n\n      :host /deep/ .treeview-container .fa {\n        width: .8rem;\n        cursor: pointer;\n      }\n\n      .treeview-container {\n        overflow-x: hidden;\n        overflow-y: auto;\n        padding-right: 18px;\n      }\n\n      .treeview-text {\n        padding: .3rem 0;\n        white-space: nowrap;\n      }\n    "]}]}],"members":{"headerTemplate":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"itemTemplate":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"items":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"config":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"itemsContainerClass":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"selectedChange":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output"}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"./treeview-i18n","name":"TreeviewI18n"},{"__symbolic":"reference","module":"./treeview-config","name":"TreeviewConfig"},{"__symbolic":"reference","module":"./treeview-event-parser","name":"TreeviewEventParser"}]}],"ngOnChanges":[{"__symbolic":"method"}],"onAllCollapseExpand":[{"__symbolic":"method"}],"onFilterTextChange":[{"__symbolic":"method"}],"onAllCheckedChange":[{"__symbolic":"method"}],"onItemCheckedChange":[{"__symbolic":"method"}],"raiseSelectedChange":[{"__symbolic":"method"}],"createHeaderTemplateContext":[{"__symbolic":"method"}],"generateSelection":[{"__symbolic":"method"}],"updateFilterItems":[{"__symbolic":"method"}],"filterItem":[{"__symbolic":"method"}],"updateCheckedOfAll":[{"__symbolic":"method"}],"updateCollapsedOfAll":[{"__symbolic":"method"}]}}}}]